/**
 * Autogenerated by Thrift Compiler (@PACKAGE_VERSION@)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Protol
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class RoleData : TBase
  {
    private int _roleId;
    private string _nickname;
    private bool _isSetNickname;
    private int _iconId;
    private List<PlayerData> _friendList;
    private List<bool> _friendOnlineStatusList;

    public int RoleId
    {
      get
      {
        return _roleId;
      }
      set
      {
        __isset.roleId = true;
        this._roleId = value;
      }
    }

    public string Nickname
    {
      get
      {
        return _nickname;
      }
      set
      {
        __isset.nickname = true;
        this._nickname = value;
      }
    }

    public bool IsSetNickname
    {
      get
      {
        return _isSetNickname;
      }
      set
      {
        __isset.isSetNickname = true;
        this._isSetNickname = value;
      }
    }

    public int IconId
    {
      get
      {
        return _iconId;
      }
      set
      {
        __isset.iconId = true;
        this._iconId = value;
      }
    }

    public List<PlayerData> FriendList
    {
      get
      {
        return _friendList;
      }
      set
      {
        __isset.friendList = true;
        this._friendList = value;
      }
    }

    public List<bool> FriendOnlineStatusList
    {
      get
      {
        return _friendOnlineStatusList;
      }
      set
      {
        __isset.friendOnlineStatusList = true;
        this._friendOnlineStatusList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool roleId;
      public bool nickname;
      public bool isSetNickname;
      public bool iconId;
      public bool friendList;
      public bool friendOnlineStatusList;
    }

    public RoleData() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I32) {
                RoleId = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.String) {
                Nickname = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 20:
              if (field.Type == TType.Bool) {
                IsSetNickname = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 30:
              if (field.Type == TType.I32) {
                IconId = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 100:
              if (field.Type == TType.List) {
                {
                  FriendList = new List<PlayerData>();
                  TList _list0 = iprot.ReadListBegin();
                  for( int _i1 = 0; _i1 < _list0.Count; ++_i1)
                  {
                    PlayerData _elem2;
                    _elem2 = new PlayerData();
                    _elem2.Read(iprot);
                    FriendList.Add(_elem2);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 110:
              if (field.Type == TType.List) {
                {
                  FriendOnlineStatusList = new List<bool>();
                  TList _list3 = iprot.ReadListBegin();
                  for( int _i4 = 0; _i4 < _list3.Count; ++_i4)
                  {
                    bool _elem5;
                    _elem5 = iprot.ReadBool();
                    FriendOnlineStatusList.Add(_elem5);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("RoleData");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.roleId) {
          field.Name = "roleId";
          field.Type = TType.I32;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(RoleId);
          oprot.WriteFieldEnd();
        }
        if (Nickname != null && __isset.nickname) {
          field.Name = "nickname";
          field.Type = TType.String;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Nickname);
          oprot.WriteFieldEnd();
        }
        if (__isset.isSetNickname) {
          field.Name = "isSetNickname";
          field.Type = TType.Bool;
          field.ID = 20;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(IsSetNickname);
          oprot.WriteFieldEnd();
        }
        if (__isset.iconId) {
          field.Name = "iconId";
          field.Type = TType.I32;
          field.ID = 30;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(IconId);
          oprot.WriteFieldEnd();
        }
        if (FriendList != null && __isset.friendList) {
          field.Name = "friendList";
          field.Type = TType.List;
          field.ID = 100;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, FriendList.Count));
            foreach (PlayerData _iter6 in FriendList)
            {
              _iter6.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (FriendOnlineStatusList != null && __isset.friendOnlineStatusList) {
          field.Name = "friendOnlineStatusList";
          field.Type = TType.List;
          field.ID = 110;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Bool, FriendOnlineStatusList.Count));
            foreach (bool _iter7 in FriendOnlineStatusList)
            {
              oprot.WriteBool(_iter7);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("RoleData(");
      bool __first = true;
      if (__isset.roleId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RoleId: ");
        __sb.Append(RoleId);
      }
      if (Nickname != null && __isset.nickname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Nickname: ");
        __sb.Append(Nickname);
      }
      if (__isset.isSetNickname) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsSetNickname: ");
        __sb.Append(IsSetNickname);
      }
      if (__isset.iconId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IconId: ");
        __sb.Append(IconId);
      }
      if (FriendList != null && __isset.friendList) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FriendList: ");
        __sb.Append(FriendList);
      }
      if (FriendOnlineStatusList != null && __isset.friendOnlineStatusList) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FriendOnlineStatusList: ");
        __sb.Append(FriendOnlineStatusList);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
